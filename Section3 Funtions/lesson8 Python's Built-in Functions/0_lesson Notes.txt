Python’s Built-in Functions: 

Key Words:
- Built-in Functions
- Standard Library Module
- import Statements
- from module import *
	- *
- sys.exit()
- Third-Party Modules
	- pip program 
	- 

1.
Built-in Functions

	All Python programs can call a basic set of functions called a Built-in Functions. 

	print()
	input()
	len()
	
2.
Standard Library

	Python also comes with a set of modules called: Standard Library.  

	Each module is a python program that contains a related group of functions that can be used in your programs. For example, the math module has math related functions. The random module has random number related functions. etc. 


3.
Import Statements 

	Before you can use the functions in a module, you must first import the module with an import statement. 

	For example in the interactive shell, you can import the random module to call it’s randint().
	
	3_Import_example_randit_functin.py

		import random
		random.randint(1, 10)
	
	Since the random function is inside the random module, you have to first type, “random.” in front of the function name to tell python to look inside the random module for the function. Randint is not a built-in function. It only exists inside the random module. Which is why you have to have the module’s name in front of it before you can call it. 

	You can import multiple modules by just separating them with a comma. 

		import random, sys, os, math


4. 
From Module import *

	The alternative form of the import statement is the "from module import *" statement. * means import everything. This also imports the random module, but now you don’t have to type our the “random.” in order to call the “randint” function. 

		from random import *
		randint(1, 10) 

	However, using the full name makes it more readable code, since you can tell random.randint(1, 10), that randint() is inside the random module. 
  It's better to use the normal form of the import statement than the from [module] import * statement format. 

5. 
sys.exit()

	How to terminate a program early, this always happens if the program execution reaches the bottom of the code instructions, but sometimes you want to stop before that. You can do this by calling the sys.exit() function. 

	import sys
	sys.exit()

	5_sysexit_example.py 

6.
Third-Party Modules
	
	Python comes with several modules with it’s Standard Library. It can also install new modules to add on functionality, these are called third-party modules and you can install them using the pip program, which also comes with python. 

	pip program must be run by the Command line also called the terminal. 

7.
Installing: Pyperclip Module

	This is the python module that gives you the ability to copy and paste text to and from the clipboard. 

	Install pyperclip module by:
		
		pip3 install pyperclip
	
	Test to see that it’s install and ready by going to IDLE and entering in:
		import pyperclip

	If no error is returned, it is installed & ready. If errors are returned, investigate.

8. 
pyperclip.copy()
pyperclip.paste()

	So pyperclips has a couple of functions for copying and pasting text. 

	8_pyperclipCopyPaste_ThirdPartyModule_example.py


RECAP 

- You can import modules and get access to new functions
- The modules that come with Python are called the standard library, but you can also install third-pary modules using the pip tool.
- The sys.exit() function will immediately quit your program.
- The pyperclip third-party module as copy() and paste() functions for reading and writing text to the clipboard. 